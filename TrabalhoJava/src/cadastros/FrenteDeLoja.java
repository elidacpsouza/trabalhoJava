/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cadastros;

import com.sun.glass.events.KeyEvent;
import dao.ClienteDao;
import dao.ProdutoDao;
import entidades.Cliente;
import entidades.ItemDoPedido;
import entidades.Pedido;
import entidades.Produto;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import modelos.ModeloTabelaItensPedido;
import trabalhojava.ManutencaoDeClientes;
import trabalhojava.ManutencaoDeProdutos;
import utilitario.Utilitario;

/**
 *
 * @author Elida
 */
public class FrenteDeLoja extends javax.swing.JFrame {

    private ModeloTabelaItensPedido modeloTabela;
    private int linhaClicada = -1;
    private Produto produto;
    private Cliente cliente;
    private Pedido pedido;
    private List<ItemDoPedido> listaItens;

    /**
     * Creates new form FrenteDeLoja
     */
    public FrenteDeLoja() {
        initComponents();
        iniciaTabela();
        pedido = new Pedido();
        listaItens = new ArrayList<>();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new componente.tabela.JCTable();
        jCCampoData1 = new componente.campo.JCCampoData();
        jTProduto = new javax.swing.JTextField();
        jTQtd = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jCModeloStatusBarMensagemImpl1 = new componente.modelo.JCModeloStatusBarMensagemImpl();
        jLabel4 = new javax.swing.JLabel();
        jTCliente = new javax.swing.JTextField();
        jTCliente1 = new javax.swing.JTextField();
        jTProduto1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable);

        jTProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTProdutoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTProdutoFocusLost(evt);
            }
        });
        jTProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTProdutoKeyPressed(evt);
            }
        });

        jTQtd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTQtdKeyPressed(evt);
            }
        });

        jLabel1.setText("Quantidade");

        jLabel2.setText("Produto");

        jLabel3.setText("Data");

        jCModeloStatusBarMensagemImpl1.setRollover(true);

        jLabel4.setText("Cliente");

        jTCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTClienteFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTClienteFocusLost(evt);
            }
        });
        jTCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTClienteKeyPressed(evt);
            }
        });

        jTCliente1.setEditable(false);
        jTCliente1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTCliente1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTCliente1FocusLost(evt);
            }
        });
        jTCliente1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTCliente1KeyPressed(evt);
            }
        });

        jTProduto1.setEditable(false);
        jTProduto1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTProduto1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTProduto1FocusLost(evt);
            }
        });
        jTProduto1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTProduto1KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCModeloStatusBarMensagemImpl1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTProduto)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTCliente1, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTProduto1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCCampoData1, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                            .addComponent(jTQtd))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCCampoData1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTCliente1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(jTProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTQtd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTProduto1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCModeloStatusBarMensagemImpl1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTProdutoKeyPressed
        jTProduto.setText(Utilitario.getSomenteNumeros(jTProduto.getText()));
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ProdutoDao dao = new ProdutoDao();
            produto = dao.obterProduto(Integer.valueOf(jTProduto.getText()));
            if (cliente != null) {
                jTProduto.setText(produto.getId().toString());
                jTProduto1.setText(produto.getDescricao().toUpperCase());
                jTQtd.requestFocus();
            } else {
                jCModeloStatusBarMensagemImpl1.setMesagemTemporaria("Produto não encontrado!", 50, Color.red);
            }

        } else if (evt.getKeyCode() == KeyEvent.VK_F2) {
            ManutencaoDeProdutos man = new ManutencaoDeProdutos(this, true, true);
            man.setVisible(true);
            if (man.getProdutoSelecionado() != null) {
                produto = man.getProdutoSelecionado();
                jTProduto.setText(produto.getId().toString());
                jTProduto1.setText(produto.getDescricao().toUpperCase());
                jTQtd.requestFocus();
            }
        }
    }//GEN-LAST:event_jTProdutoKeyPressed

    private void jTProdutoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTProdutoFocusGained
        jCModeloStatusBarMensagemImpl1.setMensagem("F2 - Localização de Produtos");
    }//GEN-LAST:event_jTProdutoFocusGained

    private void jTProdutoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTProdutoFocusLost
        jCModeloStatusBarMensagemImpl1.setMensagem("");
    }//GEN-LAST:event_jTProdutoFocusLost

    private void jTClienteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTClienteFocusGained
        jCModeloStatusBarMensagemImpl1.setMensagem("F2 - Localização de Clientes");
    }//GEN-LAST:event_jTClienteFocusGained

    private void jTClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTClienteFocusLost
        jCModeloStatusBarMensagemImpl1.setMensagem("");
    }//GEN-LAST:event_jTClienteFocusLost

    private void jTClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTClienteKeyPressed
        jTCliente.setText(Utilitario.getSomenteNumeros(jTCliente.getText()));
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ClienteDao dao = new ClienteDao();
            cliente = dao.obterCliente(Integer.valueOf(jTCliente.getText()));
            if (cliente != null) {
                jTCliente.setText(cliente.getId().toString());
                jTCliente1.setText(cliente.getNome().toUpperCase());
                jCCampoData1.requestFocus();
                pedido.setIdCliente(cliente);
            } else {
                jCModeloStatusBarMensagemImpl1.setMesagemTemporaria("Cliente não encontrado!", 50, Color.red);
            }

        } else if (evt.getKeyCode() == KeyEvent.VK_F2) {
            ManutencaoDeClientes man = new ManutencaoDeClientes(this, true, true);
            man.setVisible(true);
            if (man.getClienteSelecionado() != null) {
                cliente = man.getClienteSelecionado();
                jTCliente.setText(cliente.getId().toString());
                jTCliente1.setText(cliente.getNome().toUpperCase());
                jCCampoData1.requestFocus();
                pedido.setIdCliente(cliente);
            }
        }
    }//GEN-LAST:event_jTClienteKeyPressed

    private void jTCliente1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTCliente1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jTCliente1FocusGained

    private void jTCliente1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTCliente1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTCliente1FocusLost

    private void jTCliente1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTCliente1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTCliente1KeyPressed

    private void jTProduto1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTProduto1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jTProduto1FocusGained

    private void jTProduto1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTProduto1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTProduto1FocusLost

    private void jTProduto1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTProduto1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTProduto1KeyPressed

    private void jTQtdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTQtdKeyPressed
        jTQtd.setText(Utilitario.getSomenteNumeros(jTQtd.getText()));
        
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (jTQtd.getText() != null && !jTQtd.getText().isEmpty()) {
                if (produto != null) {
                    ItemDoPedido itemPed = new ItemDoPedido();
                    itemPed.setPedido(pedido);
                    itemPed.setProduto(produto);
                    int qtd = Integer.valueOf(jTQtd.getText());
                    itemPed.setQuantidade(qtd);
                    listaItens.add(itemPed);
                    modeloTabela.setListaPedidos(listaItens);
                    jTQtd.setText("");
                    jTProduto.setText("");
                    jTProduto1.setText("");
                    jTProduto.requestFocus();
                } else {
                    jCModeloStatusBarMensagemImpl1.setMesagemTemporaria("Selecione um produto!", 50, Color.red);
                }
            }
        }
    }//GEN-LAST:event_jTQtdKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrenteDeLoja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrenteDeLoja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrenteDeLoja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrenteDeLoja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrenteDeLoja().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private componente.campo.JCCampoData jCCampoData1;
    private componente.modelo.JCModeloStatusBarMensagemImpl jCModeloStatusBarMensagemImpl1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTCliente;
    private javax.swing.JTextField jTCliente1;
    private javax.swing.JTextField jTProduto;
    private javax.swing.JTextField jTProduto1;
    private javax.swing.JTextField jTQtd;
    private componente.tabela.JCTable jTable;
    // End of variables declaration//GEN-END:variables

    private void iniciaTabela() {
        modeloTabela = new ModeloTabelaItensPedido();
        jTable.setModel(modeloTabela);
        jTable.getColumn("ID PRODUTO").setMaxWidth(100);
        jTable.getColumn("ID PRODUTO").setMinWidth(100);
        jTable.getColumn("DESCRIÇÃO").setMinWidth(480);
        jTable.getColumn("QTD").setMinWidth(153);
    }


}
